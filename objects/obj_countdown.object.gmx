<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(obj_tank,0);
instance_destroy(obj_projectile,0);
instance_destroy(obj_powerup,0);
instance_destroy(obj_particle,0);

global.paused = 2;

//instance_deactivate_object(obj_controller);

stage = -1;
// 0 - initial delay
// 1,2,3,4 - countdown tanks
// 5 - tally total
// 6 - award bonus

for(i=0;i&lt;4;i++) {
 visibleCounter[i]=false;
 tanksTotal[i]=0;
 for(j=0;j&lt;4;j++)
  tanks[i,j]=0;
 }
timer = 4;
bonus_shift = 0
m=0; a=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if timer&lt;=0
 switch stage {
 case -1: stage++; timer = 40; break;
 case 0: stage++; timer = 1; break;
 case 2:case 4:case 6:
    stage++;timer=1; break;
 case 1:case 3:case 5: case 7: 
    no_enemies_left = true
 for(i=0;i&lt;global.players;i++) {
         if global.RoundKills[(stage-1)/2,i]&gt;tanks[(stage-1)/2,i] {
           tanks[(stage-1)/2,i]++;
           tanksTotal[i]++;
           no_enemies_left = false
           timer = 8;
           visibleCounter[(stage-1)/2]=true;
           audio_stop_sound(snd_tick);
           audio_play_sound(snd_tick,0,0);
         }}
 if no_enemies_left 
   {stage++; timer=25;} break;
 case 8: stage++; timer=25; break;
 case 9: stage++; timer=15;
 if global.players&gt;1 {
 m = tanks[0]; a = true;
 for(i=1;i&lt;global.players;i++)
 {
    if tanks[i]&gt;m {
        m = tanks[i]; a = true; bonus_shift = i;
    }
    else { if tanks[i]&gt;m
        a = false;
    }
 }
 if a=true {
    global.Score[bonus_shift] += 1000;
    audio_play_sound(snd_award,0,0);}
 }   
 else bonus_shift = -1;
     break;
 case 10: stage++;  timer=120; break; 
 case 11: instance_destroy(); 
    switch global.RoundStatus {
        case round_ok:       global.Round++; instance_create(0,0,obj_levelloader); break;
        case round_gameover: instance_create(0,0,obj_gameoverscreen); break;
    }
 break;
 }
 
 else timer--;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>stage&gt;=0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_background_part_ext(background2,0,0,8,8,-8,-8,21,19,c_white,1);
draw_set_font(global.fontNormal) draw_set_halign(fa_left) draw_set_valign(fa_top);
draw_text_colour(-16+8,-8+8," HIGH SCORE  ",p_red,p_red,p_red,p_red,1);
draw_text_colour(-16+8,-8+8,"           "+string_format(global.highScore,6,0),p_yellow,p_yellow,p_yellow,p_yellow,1);

draw_text_colour(-16+40,-8+16, "STAGE  "+string_format(global.Round+1,3,0),p_white,p_white,p_white,p_white,1);

for(i=0;i&lt;global.players;i++) {
draw_text_colour(-16+88*(i div 2),-8+32+8*(i mod 2),"P"+string(i+1),p_red,p_red,p_red,p_red,1);
draw_text_colour(-16+88*(i div 2),-8+32+8*(i mod 2),string_format(global.Score[i],9,0),p_yellow,p_yellow,p_yellow,p_yellow,1);
}

for(i=0;i&lt;4;i++) {
    draw_sprite(spr_enemytank,2*i,      -16+12,         -8+56+4+16*i)
    draw_sprite(spr_parts,2,            -16+56+4,       -8+56+4+16*i)
    draw_text_colour(                   -16+16,         -8+56+16*i," "+string(100*(i+1)),p_white,p_white,p_white,p_white,1);
    if stage&gt;=i*2+1 
    for(j=0;j&lt;global.players;j++) {
    if (stage&gt;i*2+1 or visibleCounter[(stage-1)/2])
    draw_text_colour(                   -16+72+24*j,    -8+56+16*i,string_format(tanks[i,j],2,0),p_white,p_white,p_white,p_white,1);
    }
}

draw_sprite_stretched(spr_parts,3,-16+0,-8+112,160,8);

draw_text_colour(-16+8,-8+120,"TOTAL",p_white,p_white,p_white,p_white,1);
    if stage&gt;=9
        for(j=0;j&lt;global.players;j++) {
        draw_text_colour(-16+72+24*j,-8+120,string_format(tanksTotal[j],2,0),p_white,p_white,p_white,p_white,1);
        }
    if stage&gt;=10 and bonus_shift&gt;=0
    {
        draw_text_colour(-16+24+24*bonus_shift,-8+128,"  BONUS!",p_red,p_red,p_red,p_red,1);
        draw_text_colour(-16+24+24*bonus_shift,-8+136,"1000 PTS",p_white,p_white,p_white,p_white,1);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
