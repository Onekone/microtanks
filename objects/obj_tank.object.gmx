<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>tank_mask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_solidobject</parentName>
  <maskName>tank_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>current_pal=0;
my_pal_sprite=palette_tank;

///Override stuff.
override_surface=noone;
override_pal_index=1;

img = 0;
img_spd = 0.15;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = 0;
vsp = 0;

dir = 0;
spd = 0.25;
stuck = 0;
clippingIntoTankAlready = true;

hp = 1;
scoreValue = 0;
bonusItems = 0;

stunned = 0;
invulnerable = 0;

subPx = 0;

shotsFired = 0;
shotsMax = 1;

iceMove = 0;
sandMove = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.paused</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//hsp = keyboard_check(vk_right) - keyboard_check(vk_left)
//vsp = keyboard_check(vk_down) - keyboard_check(vk_up)

xprevious = x;
yprevious = y;
_tt = 0.125;

if invulnerable
 invulnerable--;

    asp = spd; // animation speed. Here are animation speed is changed
    msp = spd; // movement speed. Here are move speed modifiers are applied

var p = global.tileSet[#x div tileSize,y div tileSize];
var asp = 1; msp = spd;

switch(p)
{
    case tile_swamp: asp = 0.5; msp = spd/2; break;
    case tile_snow: 
        if hsp=0 and vsp=0 { if iceMove&gt;0 switch dir {
            case 0: hsp=1; break;
            case 1: vsp=-1; break;
            case 2: hsp=-1; break;
            case 3: vsp=1; break;
            }
            iceMove--;
            asp = 0;
        }
        else { iceMove = 28;} break;
    case tile_sand: 
        if (hsp=0 &amp;&amp; vsp=0)
            sandMove=28
    else {if sandMove&gt;0 msp=0; sandMove--} break;
}

stuck = 0;
clippingIntoTankAlready = collision_rectangle((x),(y),(x+7),(y+7),obj_solidobject,0,1);

    if (hsp!=0) {
        img += img_spd*asp;
        dir = 2*(hsp&lt;0)
        v = y-((y+4)&amp;$fffffff8);
        if sign(hsp)&lt;0  k = -1;
        else            k = 8
        if (y mod tileSize!=0) {
            y -= min(abs(v),2)*sign(v);        
            while (!clippingIntoTankAlready &amp;&amp; collision_rectangle(x,y,(x+7),(y+7),obj_solidobject,0,1))
                {y+=_tt*sign(v); stuck = 1;}
        }
        else
        {
            x += msp*hsp;        
            while (!clippingIntoTankAlready &amp;&amp; collision_rectangle(x,y,(x+7),(y+7),obj_solidobject,0,1)) {
                x-=_tt*hsp; stuck = 1;}       
            if (tile_solid(global.tileSet[#(x+k) div 8,y div 8]))
                {x = (x+4)&amp;$fffffff8; stuck = 1;}
            }
    }
    else if (vsp!=0) {
        img += img_spd*asp;
        dir = 1+2*(vsp&gt;0)
        v = x-((x+4)&amp;$fffffff8);
        if sign(vsp)&lt;0  k = -1;
        else            k = 8  
        if (x mod tileSize!=0) {                    
              x -= min(abs(v),2)*sign(v); 
              while (!clippingIntoTankAlready &amp;&amp; collision_rectangle(x,y,(x+7),(y+7),obj_solidobject,0,1))
                {x+=_tt*sign(v);  stuck = 1;}
             }
        else {     
            y += msp*vsp;        
            while (!clippingIntoTankAlready &amp;&amp; collision_rectangle(x,y,(x+7),(y+7),obj_solidobject,0,1)) {
                y-=_tt*vsp; stuck = 1;}
            if (tile_solid(global.tileSet[#x div 8,(y+k) div 8]))
                {y = (y+4)&amp;$fffffff8; stuck = 1;}   
            }           
    }    
    
if x&lt;0 or x&gt;tileSize*boardSize-8 or y&lt;0 or y&gt;tileSize*boardSize-8
    stuck = 1;

x = clamp(x,0,tileSize*boardSize-8);
y = clamp(y,0,tileSize*boardSize-8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//c = c_lime
//if stuck c=c_blue
//else if clippingIntoTankAlready c=c_red

//    draw_rectangle_colour(x,y,x+7,y+7,c,c,c,c,0);
    
pal_swap_set(my_pal_sprite,current_pal,false);
    draw_sprite_ext(spr_enemytank,img mod 2,floor(x)+4,floor(y)+4,1,1,dir*90,image_blend,image_alpha);
pal_swap_reset();

if invulnerable
    draw_sprite_ext(spr_invulnerable,global.timer mod 2,floor(x)+4,floor(y)+4,1,1,dir*90,image_blend,image_alpha);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
